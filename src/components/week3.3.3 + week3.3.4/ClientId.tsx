import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import { useClients } from './useGetClientquerry'; // Adjust the path as necessary
import { useDeleteClient } from './useDeleteClientquery'; // Adjust the path as necessary
import { useAddClient } from './useAddClientquery'; // Import add client hook


type ClientsObject = {
  id: string;
  firstName: string;
  lastName: string;
  street: string;
  postalCode: string;
  city: string;
  region: string;
  photoUrl: string;
  phoneNumber: string;
};

export const ClientsIdTanstack = () => {
  const { data: clients = [], error, isLoading } = useClients();
  const deleteMutation = useDeleteClient();
  const addMutation = useAddClient();
   
  const [newClient, setNewClient] = useState<ClientsObject>({
    id: '', // will be generated by the server
    firstName: '',
    lastName: '',
    street: '',
    postalCode: '',
    city: '',
    region: '',
    photoUrl: '',
    phoneNumber: '',
  });

  const handleAddClient = () => {
    addMutation.mutate(newClient);
    setNewClient({ // Reset form after adding
      id: '',
      firstName: '',
      lastName: '',
      street: '',
      postalCode: '',
      city: '',
      region: '',
      photoUrl: '',
      phoneNumber: '',
    });
  };



  if (isLoading) return <p>Loading...</p>;
  if (error) return <p>An error occurred: {error.message}</p>;

  return (
    <div>
      <h1>Lista klientów</h1>
      <ul>
        {clients.map((client: ClientsObject) => (
          <li key={client.id}>
            <h2>{client.firstName} {client.lastName}</h2>
            <p><strong>Address:</strong> {client.street}, {client.postalCode}, {client.city}, {client.region}</p>
            <p><strong>Phone Number:</strong> {client.phoneNumber}</p>
            <img src={client.photoUrl} alt={`${client.firstName} ${client.lastName}`} />

            <button onClick={() => deleteMutation.mutate(client.id)}>Usuń</button>
            <Link to={`/clients/${client.id}/edit`}>
              <button>Edytuj</button>
            </Link>
          </li>
        ))}
      </ul>

      {/* Form for adding a new client */}
      <h2>Dodaj klienta</h2>
      <form onSubmit={(e) => { e.preventDefault(); handleAddClient(); }}>
        <input
          type="text"
          placeholder="First Name"
          value={newClient.firstName}
          onChange={(e) => setNewClient({ ...newClient, firstName: e.target.value })}
          required
        />
        <input
          type="text"
          placeholder="Last Name"
          value={newClient.lastName}
          onChange={(e) => setNewClient({ ...newClient, lastName: e.target.value })}
          required
        />
        <input
          type="text"
          placeholder="Street"
          value={newClient.street}
          onChange={(e) => setNewClient({ ...newClient, street: e.target.value })}
          required
        />
        <input
          type="text"
          placeholder="Postal Code"
          value={newClient.postalCode}
          onChange={(e) => setNewClient({ ...newClient, postalCode: e.target.value })}
          required
        />
        <input
          type="text"
          placeholder="City"
          value={newClient.city}
          onChange={(e) => setNewClient({ ...newClient, city: e.target.value })}
          required
        />
        <input
          type="text"
          placeholder="Region"
          value={newClient.region}
          onChange={(e) => setNewClient({ ...newClient, region: e.target.value })}
          required
        />
        <input
          type="url" // Changed to "url" for photo URL
          placeholder="Photo URL"
          value={newClient.photoUrl}
          onChange={(e) => setNewClient({ ...newClient, photoUrl: e.target.value })}
          required
        />
        <input
          type="tel" // Changed to "tel" for phone number
          placeholder="Phone Number"
          value={newClient.phoneNumber}
          onChange={(e) => setNewClient({ ...newClient, phoneNumber: e.target.value })}
          required
        />
        <button type="submit">Add Client</button>
      </form>
    </div>
  );
};
